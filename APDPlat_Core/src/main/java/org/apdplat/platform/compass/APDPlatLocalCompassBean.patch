c234d4e43643b731aead3aa36985a6a5835c5501
 APDPlatLocalCompassBean.java | 86 +++++++++++++++++++++++++++++---------------
 1 file changed, 58 insertions(+), 28 deletions(-)

diff --git APDPlatLocalCompassBean.java APDPlatLocalCompassBean.java
index 5210b3c..ef39276 100644
--- APDPlatLocalCompassBean.java
+++ APDPlatLocalCompassBean.java
@@ -1,12 +1,14 @@
+package com.apdplat.platform.compass;
+
 /*
  * Copyright 2004-2006 the original author or authors.
- * 
+ *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
- * 
+ *
  *      http://www.apache.org/licenses/LICENSE-2.0
- * 
+ *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
@@ -14,9 +16,11 @@
  * limitations under the License.
  */
 
-package org.compass.spring;
-
+import com.apdplat.platform.log.APDPlatLogger;
+import com.apdplat.platform.search.IndexManager;
+import com.apdplat.platform.util.FileUtils;
 import java.io.File;
+import java.io.IOException;
 import java.lang.reflect.Field;
 import java.lang.reflect.InvocationHandler;
 import java.lang.reflect.InvocationTargetException;
@@ -28,8 +32,6 @@ import java.util.Properties;
 import java.util.Set;
 import javax.sql.DataSource;
 
-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
 import org.compass.core.Compass;
 import org.compass.core.CompassException;
 import org.compass.core.config.CompassConfiguration;
@@ -41,6 +43,7 @@ import org.compass.core.lucene.LuceneEnvironment;
 import org.compass.core.lucene.engine.store.jdbc.ExternalDataSourceProvider;
 import org.compass.core.spi.InternalCompass;
 import org.compass.core.util.ClassUtils;
+import org.compass.spring.LocalCompassBeanPostProcessor;
 import org.compass.spring.transaction.SpringSyncTransactionFactory;
 import org.springframework.beans.BeansException;
 import org.springframework.beans.factory.BeanClassLoaderAware;
@@ -51,16 +54,14 @@ import org.springframework.beans.factory.InitializingBean;
 import org.springframework.beans.factory.config.PropertyPlaceholderConfigurer;
 import org.springframework.context.ApplicationContext;
 import org.springframework.context.ApplicationContextAware;
+import org.springframework.core.io.ClassPathResource;
+import org.springframework.core.io.FileSystemResource;
 import org.springframework.core.io.Resource;
 import org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy;
 import org.springframework.transaction.PlatformTransactionManager;
 
-/**
- * @author kimchy
- */
-public class LocalCompassBean implements FactoryBean, InitializingBean, DisposableBean, BeanNameAware, ApplicationContextAware, BeanClassLoaderAware {
-
-    protected static final Log log = LogFactory.getLog(LocalCompassBean.class);
+public class APDPlatLocalCompassBean implements FactoryBean, InitializingBean, DisposableBean, BeanNameAware, ApplicationContextAware, BeanClassLoaderAware {
+    protected static final APDPlatLogger log = new APDPlatLogger(APDPlatLocalCompassBean.class);
 
     private Resource connection;
 
@@ -72,9 +73,10 @@ public class LocalCompassBean implements FactoryBean, InitializingBean, Disposab
 
     private Resource[] resourceLocations;
 
-    private Resource[] resourceJarLocations;
+    private String resourceJarLocations;
+
 
-    private Resource[] resourceDirectoryLocations;
+    private String resourceDirectoryLocations;
 
     private String[] classMappings;
 
@@ -130,7 +132,16 @@ public class LocalCompassBean implements FactoryBean, InitializingBean, Disposab
      * path.
      */
     public void setConnection(Resource connection) {
-        this.connection = connection;
+        //this.connection = connection;
+        //忽略compass注入的相对路径
+        //这里从索引管理器中获取索引的绝对路径
+        Resource resource=new FileSystemResource(IndexManager.getIndexDir());
+        this.connection=resource;
+        try {
+            log.info("开始执行apdplat对compass的定制修改1 :将索引目录路径【 "+connection.getFile().getPath()+" 】修改成路径【 "+this.connection.getFile().getAbsolutePath()+"】");
+        } catch (IOException ex) {
+            ex.printStackTrace();
+        }
     }
 
     /**
@@ -191,7 +202,7 @@ public class LocalCompassBean implements FactoryBean, InitializingBean, Disposab
      * Can be used to add to mappings from a Compass XML config file, or to
      * specify all mappings locally.
      */
-    public void setResourceJarLocations(Resource[] resourceJarLocations) {
+    public void setResourceJarLocations(String resourceJarLocations) {
         this.resourceJarLocations = resourceJarLocations;
     }
 
@@ -202,7 +213,7 @@ public class LocalCompassBean implements FactoryBean, InitializingBean, Disposab
      * Can be used to add to mappings from a Compass XML config file, or to
      * specify all mappings locally.
      */
-    public void setResourceDirectoryLocations(Resource[] resourceDirectoryLocations) {
+    public void setResourceDirectoryLocations(String resourceDirectoryLocations) {
         this.resourceDirectoryLocations = resourceDirectoryLocations;
     }
 
@@ -301,9 +312,18 @@ public class LocalCompassBean implements FactoryBean, InitializingBean, Disposab
             }
         }
 
-        if (resourceJarLocations != null) {
-            for (Resource resourceJarLocation : resourceJarLocations) {
-                config.addJar(resourceJarLocation.getFile());
+        if (resourceJarLocations != null && !"".equals(resourceJarLocations.trim())) {
+            log.info("开始执行apdplat对compass的定制修改2");
+            log.info("compass resourceJarLocations:"+resourceJarLocations);
+            String[] jars=resourceJarLocations.split(",");
+            for (String jar : jars) {
+                try{
+                    FileSystemResource resource=new FileSystemResource(FileUtils.getAbsolutePath(jar));
+                    config.addJar(resource.getFile());
+                    log.info("compass resourceJarLocations  find:"+jar);
+                }catch(Exception e){
+                    log.info("compass resourceJarLocations not exists:"+jar);
+                }
             }
         }
 
@@ -313,14 +333,24 @@ public class LocalCompassBean implements FactoryBean, InitializingBean, Disposab
             }
         }
 
-        if (resourceDirectoryLocations != null) {
-            for (Resource resourceDirectoryLocation : resourceDirectoryLocations) {
-                File file = resourceDirectoryLocation.getFile();
-                if (!file.isDirectory()) {
-                    throw new IllegalArgumentException("Resource directory location ["
-                            + resourceDirectoryLocation + "] does not denote a directory");
+        if (resourceDirectoryLocations != null && !"".equals(resourceDirectoryLocations.trim()) ) {
+            log.info("开始执行apdplat对compass的定制修改3");
+            log.info("compass resourceDirectoryLocations:"+resourceDirectoryLocations);
+            String[] dirs=resourceDirectoryLocations.split(",");
+            for (String dir : dirs) {
+                ClassPathResource resource=new ClassPathResource(dir);
+                try{
+                    File file = resource.getFile();
+                    if (!file.isDirectory()) {
+                        log.info("Resource directory location ["
+                                + dir + "] does not denote a directory");
+                    }else{
+                        config.addDirectory(file);
+                    }
+                    log.info("compass resourceDirectoryLocations find:"+dir);
+                }catch(Exception e){
+                        log.info("compass resourceDirectoryLocations not exists:"+dir);
                 }
-                config.addDirectory(file);
             }
         }
 
